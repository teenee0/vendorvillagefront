import React, { useState } from 'react';
import { FaFacebookF, FaGoogle, FaLinkedinIn } from 'react-icons/fa';
// import axios from 'axios';
import axios from "../../api/axiosDefault.js";
import { useNavigate } from 'react-router-dom';
import './Registration.css';


const AuthPage = () => {
  const [isRightPanelActive, setIsRightPanelActive] = useState(false);
  const [loginData, setLoginData] = useState({ email: '', password: '' });
  const [registerData, setRegisterData] = useState({ username: '', email: '', password1: '', password2: '' });
  const [errors, setErrors] = useState({});
  const navigate = useNavigate();

  const handleSignUpClick = () => setIsRightPanelActive(true);
  const handleSignInClick = () => setIsRightPanelActive(false);

  const handleLoginChange = (e) => {
    setLoginData({ ...loginData, [e.target.name]: e.target.value });
  };

  const handleRegisterChange = (e) => {
    setRegisterData({ ...registerData, [e.target.name]: e.target.value });
  };

  const handleLoginSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post(
        'accounts/api/auth/login/',
        { username: loginData.email, password: loginData.password },
        { withCredentials: true }  // üî• –í–∞–∂–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É–∫–æ–≤
      );

      navigate('/account');
    } catch (error) {
      setErrors({ login: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' });
    }
  };

  const handleRegisterSubmit = async (e) => {
    e.preventDefault();
    if (registerData.password1 !== registerData.password2) {
      setErrors({ register: '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç' });
      return;
    }
    if (registerData.password1.length < 8) {
      setErrors({ register: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤' });
      return;
    }
    try {
      const response = await axios.post(
        'accounts/api/auth/register/',
        {
          username: registerData.username,
          email: registerData.email,
          password1: registerData.password1,
          password2: registerData.password2,
        },
        { withCredentials: true }
      );
      console.log(response);
      navigate('/account');
    } catch (error) {
      const err = error.response?.data;
      setErrors({ register: err?.non_field_errors || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' });
    }
  };
  

  return (
    <div className="auth-page">
      <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
      <div className={`auth-container ${isRightPanelActive ? 'right-panel-active' : ''}`}>
        <div className="form-container sign-up-container">
          <form onSubmit={handleRegisterSubmit}>
            <h1>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
            <div className="social-container">
              <a href="#" className="social"><FaFacebookF /></a>
              <a href="#" className="social"><FaGoogle /></a>
              <a href="#" className="social"><FaLinkedinIn /></a>
            </div>
            <span>–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ email –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</span>
            <input type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" value={registerData.username} onChange={handleRegisterChange} required />
            <input type="email" name="email" placeholder="Email" value={registerData.email} onChange={handleRegisterChange} required />
            <input type="password" name="password1" placeholder="–ü–∞—Ä–æ–ª—å" value={registerData.password1} onChange={handleRegisterChange} required />
            <input type="password" name="password2" placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" value={registerData.password2} onChange={handleRegisterChange} required />
            {errors.register && <div className="error-message">{errors.register}</div>}
            <button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
          </form>
        </div>
        <div className="form-container sign-in-container">
          <form onSubmit={handleLoginSubmit}>
            <h1>–í—Ö–æ–¥</h1>
            <div className="social-container">
              <a href="#" className="social"><FaFacebookF /></a>
              <a href="#" className="social"><FaGoogle /></a>
              <a href="#" className="social"><FaLinkedinIn /></a>
            </div>
            <span>–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç</span>
            <input type="text" name="email" placeholder="Email" value={loginData.email} onChange={handleLoginChange} required />
            <input type="password" name="password" placeholder="–ü–∞—Ä–æ–ª—å" value={loginData.password} onChange={handleLoginChange} required />
            {errors.login && <div className="error-message">{errors.login}</div>}
            <a href="#">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</a>
            <button type="submit">–í–æ–π—Ç–∏</button>
          </form>
        </div>
        <div className="overlay-container">
          <div className="overlay">
            <div className="overlay-panel overlay-left">
              <h1>–£–∂–µ —Å –Ω–∞–º–∏?!</h1>
              <p>–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º</p>
              <button className="ghost" onClick={handleSignInClick}>–í–æ–π—Ç–∏</button>
            </div>
            <div className="overlay-panel overlay-right">
              <h1>–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!</h1>
              <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–∞–º–∏</p>
              <button className="ghost" onClick={handleSignUpClick}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AuthPage;
